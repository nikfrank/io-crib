.score-track {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  
  pointer-events: none;

  /* background: #80008040;
  mix-blend-mode: saturation; */

  svg {
    width: 100%;
    height: 100%;

    line {
      stroke-width: 0.125px;
      stroke: #0008;
      stroke-dasharray: 0.5 0.4;
    }
  }
}

.game-container {
  flex-grow: 1;

  padding: 7vh 7vw;
  height: 86vh;
  width: 86vw;
}

.Game {
  display: flex;
  flex-direction: column-reverse; /* column for p2-mode */

  height: 100%;
  width: 100%;

  .peg {
    width: 100%;
    height: 29vh;

    .peg-container {
      width: 100%;
      height: 100%;
      position: relative;


      .peg-arrow {
        position: absolute;
        right: 10px;
        z-index: 12;

        &::after {
          position: absolute;
          top: 0;
          right: 0;
          color: #c00;
        }
        
        &.me {
          bottom: -1px;

          &::after {
            content: "\\/";
          }
        }
        &.them {
          top: -20px;
          
          &::after {
            content: "/\\";
          }
        }
      }
      
      .peg-total {
        position: absolute;
        right: 32px;
        top: calc(50% - 20px);
        z-index: 12;
        height: 32px;
        width: 32px;
        background: #f885;
        border-radius: 50%;
        border: 2px solid red;

        display: flex;
        justify-content: center;
        align-items: center;

        span {
          font-size: 1.25rem;
          color: #500;
        }

        .PhaseButton {
          justify-content: flex-start;
        }
      }
    }
  }

  .my-hand {
    margin-top: -10px;
  }

  .peg svg {
    margin-top: 20px;
  }
  
  .hand {
    width: 100%;
    height: 28.67vh;
    max-width: 86vw;
    
    text {
      user-select: none;
    }

    & svg > g > * { transition: 20ms transform }
    
    @for $i from 0 through 5 {
      &.selected-#{$i} {
        
        svg > g:nth-child(#{$i+1}) {
          
          & > rect {
            transform: translateY(-10px);
          }
          & > text {
            transform: translate(7px, 30px);
          }
          & > g {
            transform: translate(21px, 50px) rotate(180deg);
          }
        }
      }
    }
  }

  .cut-container {
    position: fixed;
    right: 8vw;
    top: 44vh;
    height: 12vh;
    width: 12vh;

    & > svg > g > text {
      transform: translate(14px, 80px) scale(2);
    }
    & > svg > g > g {
      transform: translate(40px, 116px) rotate(180deg) scale(2);
    }
  }
}

.PhaseButton {
  position: fixed;
  top: 54vh;
  height: 50px;
  width: 86vw;

  display: flex;
  justify-content: center;
  align-items: center;
  
  button {
    margin-top: 6px;
    height: 50px;
    border: 3px outset white;
    color: black;
    font-size: 1.875rem;

    &[disabled] {
      background: #cccc;
    }
  }
}
